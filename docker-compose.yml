version: "3"

volumes:
  pgsql_data:
  mysql_data:

services:

  bpapi:
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
    image: bpapi
    container_name: bpapi_container
    restart: always
    depends_on:
      - dbpostgre
    volumes:
      - ./bpapi:/bpapi
    ports:
      - "9090:9090"

  dbpostgre:
    image : postgres:12.2-alpine
    container_name: pgsql_container
    restart: on-failure
    env_file:
      - '.config.env'
    volumes:
      - pgsql_data:/var/lib/postgresql/data
    ports:
      - 5432:5432/tcp
    # networks:
    #   - psql-pgql      
    healthcheck:
      test: ["CMD", "psql -h 'localhost' -U 'admin' -c '\\l'"]
      timeout: 45s
      interval: 10s
      retries: 10

  # graphql:
  #   container_name: graphile_container
  #   restart: always
  #   image: graphile/postgraphile
  #   depends_on:
  #     - db
  #   environment:
  #     DATABASE_URL: postgres://postgres:1234@db:5432/your_database # To be moved to environment file
  #   expose:
  #     - 5000
  #   ports:
  #     - 5000:5000
  #   command: ["postgraphile", "--connection", $DATABASE_URL, "--host", "0.0.0.0", "--port", "5000", "--schema", "your_schema"]
  #   links:
  #     - dbpostgre
  #   networks:
  #     - psql-pgql-network

  # networks:
  #   psql-pgql-network:

  # pgadmin:
  #   image: dpage/pgadmin4:latest
  #   container_name: pgadmin_container
  #   restart: always
  #   depends_on:
  #     - dbpostgre
  #     # dbpostgre:
  #     #   condition: service_healthy
  #   ports:
  #     - 5454:5454/tcp
  #   env_file:
  #     - '.config.env'

  # dbmysql:
  #   image: mariadb/server
  #   container_name: mariadb_container
  #   restart: on-failure
  #   env_file:
  #     - '.config.env'
  #   logging:
  #     driver: syslog
  #     options:
  #       tag: "{{.DaemonName}}(image={{.ImageName}};name={{.Name}};id={{.ID}})"
  #   volumes:
  #     - mysql_data:/var/lib/mysql
  #   ports:
  #     - 3306:3306/tcp
  #   healthcheck:
  #     test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
  #     timeout: 30s
  #     interval: 10s
  #     retries: 10